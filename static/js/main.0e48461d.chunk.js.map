{"version":3,"sources":["components/Grid.js","components/checkWin.js","components/ConnectFour.js","blog/BlogPage.jsx","blog/GettingStarted.jsx","blog/DataStructure.jsx","blog/SettingGrid.jsx","blog/WinningIsWinning.jsx","blog/UnderConstruction.jsx","App.js","serviceWorker.js","index.js"],"names":["COLOR","red","blue","Disk","styled","div","_templateObject","_ref","color","includes","_ref2","replace","Column","_templateObject2","SIZE","_ref3","index","Container","_templateObject3","Grid","_ref4","grid","onDrop","react_default","a","createElement","map","column","key","onClick","checkFromLeftWithSlope","currentPlayer","slope","disksAmount","row","getLeftPositionWithSlope","leftResult","checkWin","columnIndex","currentPosition","length","leftUpPosition","checkFromLeftUp","checkFromLeftDown","checkFromLeft","checkVertical","GRID","getRandomPlayer","Math","random","App","_useState","useState","_useState2","Object","slicedToArray","setGrid","_useState3","_useState4","setCurrentPlayer","_useState5","_useState6","gameOver","setGameOver","className","concat","href","components_Grid","updatedGrid","toConsumableArray","reduce","total","current","isGridFull","BlogPage","children","title","isShown","setIsShown","style","paddingBottom","GettingStarted","blog_BlogPage","react_highlight_default","DataStructure","SettingGrid","WinningIsWinning","UnderConstruction","isActive","setIsActive","aria-label","react","ConnectFour","blog_GettingStarted","blog_DataStructure","blog_SettingGrid","blog_WinningIsWinning","blog_UnderConstruction","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0e48461d.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst COLOR = {\n\tred: 'hsl(348, 100%, 61%)',\n\tblue: 'hsl(217, 71%, 53%)',\n};\nconst LIGHT = 'hsl(0, 0%, 96%)';\nconst DARK = 'hsl(0, 0%, 86%)';\nconst SIZE = 2;\n\nconst Disk = styled.div`\n\twidth: ${SIZE}em;\n\theight: ${SIZE}em;\n\tborder-radius: ${SIZE}em;\n\tborder: 2px solid\n\t\t${({ color }) => (!color.includes('-win') ? COLOR[color] : 'black')};\n\tbackground-color: ${({ color }) => COLOR[color.replace('-win', '')]};\n\tmargin-top: 1px;\n`;\n\nconst Column = styled.div`\ndisplay: flex;\nflex-direction: column-reverse;\n  width: ${SIZE}em;\n  height: ${SIZE * 7}em;\n  padding: 2px 6px 2px 2px\n  background-color: ${({ index }) => (index % 2 === 0 ? LIGHT : DARK)};\n`;\n\nconst Container = styled.div`\n\tleft: 0;\n\tright: 0;\n\tmargin: auto;\n\tdisplay: flex;\n\twidth: fit-content;\n\tborder: 2px solid black;\n\tborder-radius: 5px;\n\toverflow: hidden;\n\tbox-sizing: unset;\n`;\n\nconst Grid = ({ grid, onDrop }) => (\n\t<Container>\n\t\t{grid.map((column, index) => (\n\t\t\t<Column\n\t\t\t\tkey={index}\n\t\t\t\tindex={index}\n\t\t\t\tonClick={() => onDrop && onDrop(index)}\n\t\t\t>\n\t\t\t\t{column.map((color, index) => (\n\t\t\t\t\t<Disk key={index} color={color} />\n\t\t\t\t))}\n\t\t\t</Column>\n\t\t))}\n\t</Container>\n);\n\nexport default Grid;\n","const checkVertical = (currentPlayer, column, disksAmount) => {\n\tdisksAmount = disksAmount || 1;\n\tconst index = column.length - disksAmount;\n\tif (!column[index] || column[index] !== currentPlayer) {\n\t\treturn false;\n\t}\n\tif (\n\t\tdisksAmount === 4 ||\n\t\tcheckVertical(currentPlayer, column, disksAmount + 1)\n\t) {\n\t\tcolumn[index] = currentPlayer + '-win';\n\t\treturn true;\n\t}\n};\n\nconst checkFromLeftWithSlope = (\n\tcurrentPlayer,\n\tgrid,\n\t{ column, row },\n\tslope,\n\tdisksAmount\n) => {\n\tif (!grid[column] || grid[column][row] !== currentPlayer) {\n\t\treturn false;\n\t}\n\tdisksAmount = disksAmount || 0;\n\tconst nextPosition = { column: column + 1, row: row + slope };\n\tif (\n\t\tcheckFromLeftWithSlope(\n\t\t\tcurrentPlayer,\n\t\t\tgrid,\n\t\t\tnextPosition,\n\t\t\tslope,\n\t\t\tdisksAmount + 1\n\t\t) ||\n\t\tdisksAmount >= 3\n\t) {\n\t\tgrid[column][row] = currentPlayer + '-win';\n\t\treturn true;\n\t}\n};\n\nconst getLeftPositionWithSlope = (\n\tcurrentPlayer,\n\tgrid,\n\t{ column, row },\n\tslope\n) => {\n\tif (!grid[column] || grid[column][row] !== currentPlayer) {\n\t\treturn false;\n\t}\n\tconst nextPosition = { column: column - 1, row: row - slope };\n\tconst leftResult = getLeftPositionWithSlope(\n\t\tcurrentPlayer,\n\t\tgrid,\n\t\tnextPosition,\n\t\tslope\n\t);\n\tif (leftResult === false) {\n\t\treturn { column, row };\n\t}\n\treturn leftResult;\n};\n\nconst checkFromLeftUp = (currentPlayer, grid, column) => {\n\tconst SLOPE = -1;\n\tconst currentPosition = { column, row: grid[column].length - 1 };\n\tconst leftUpPosition = getLeftPositionWithSlope(\n\t\tcurrentPlayer,\n\t\tgrid,\n\t\tcurrentPosition,\n\t\tSLOPE\n\t);\n\treturn checkFromLeftWithSlope(currentPlayer, grid, leftUpPosition, SLOPE);\n};\n\nconst checkFromLeftDown = (currentPlayer, grid, column) => {\n\tconst SLOPE = 1;\n\tconst currentPosition = { column, row: grid[column].length - 1 };\n\tconst leftUpPosition = getLeftPositionWithSlope(\n\t\tcurrentPlayer,\n\t\tgrid,\n\t\tcurrentPosition,\n\t\tSLOPE\n\t);\n\treturn checkFromLeftWithSlope(currentPlayer, grid, leftUpPosition, SLOPE);\n};\nconst checkFromLeft = (currentPlayer, grid, column) => {\n\tconst SLOPE = 0;\n\tconst currentPosition = { column, row: grid[column].length - 1 };\n\tconst leftUpPosition = getLeftPositionWithSlope(\n\t\tcurrentPlayer,\n\t\tgrid,\n\t\tcurrentPosition,\n\t\tSLOPE\n\t);\n\treturn checkFromLeftWithSlope(currentPlayer, grid, leftUpPosition, SLOPE);\n};\n\nconst checkWin = (currentPlayer, grid, columnIndex) => {\n\treturn (\n\t\tcheckFromLeftUp(currentPlayer, grid, columnIndex) ||\n\t\tcheckFromLeftDown(currentPlayer, grid, columnIndex) ||\n\t\tcheckFromLeft(currentPlayer, grid, columnIndex) ||\n\t\tcheckVertical(currentPlayer, grid[columnIndex])\n\t);\n};\n\nexport default checkWin;\n","import React, { useState } from 'react';\nimport Grid from './Grid';\nimport checkWin from './checkWin';\n\nconst RED = 'red';\nconst BLUE = 'blue';\nconst GRID = [[], [], [], [], [], [], []];\n\nconst getRandomPlayer = () => (Math.random() >= 0.5 ? RED : BLUE);\n\nconst isGridFull = (grid) =>\n\tgrid.reduce((total, current) => total && current.length === 6, true);\n\nconst App = () => {\n\tconst [grid, setGrid] = useState(GRID);\n\tconst [currentPlayer, setCurrentPlayer] = useState(getRandomPlayer());\n\tconst [gameOver, setGameOver] = useState(false);\n\tconst handleDrop = (index) => {\n\t\tif (grid[index].length > 5 || gameOver) {\n\t\t\treturn undefined;\n\t\t}\n\t\tconst updatedGrid = [...grid];\n\t\tupdatedGrid[index] = [...updatedGrid[index], currentPlayer];\n\t\tsetGrid(updatedGrid);\n\t\tif (isGridFull(updatedGrid)) {\n\t\t\treturn setGameOver(true);\n\t\t}\n\t\tif (checkWin(currentPlayer, updatedGrid, index)) {\n\t\t\treturn setGameOver(currentPlayer);\n\t\t}\n\t\tsetCurrentPlayer(currentPlayer === RED ? BLUE : RED);\n\t};\n\treturn (\n\t\t<div className=\"has-text-centered\">\n\t\t\t{gameOver ? (\n\t\t\t\t<p>\n\t\t\t\t\t{gameOver !== true\n\t\t\t\t\t\t? `The ${currentPlayer} player won!`\n\t\t\t\t\t\t: 'Game over.'}{' '}\n\t\t\t\t\tClick{' '}\n\t\t\t\t\t<a\n\t\t\t\t\t\thref=\"#!\"\n\t\t\t\t\t\tonClick={() =>\n\t\t\t\t\t\t\tsetCurrentPlayer(getRandomPlayer()) ||\n\t\t\t\t\t\t\tsetGameOver(false) ||\n\t\t\t\t\t\t\tsetGrid(GRID)\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\there\n\t\t\t\t\t</a>{' '}\n\t\t\t\t\tto play again.\n\t\t\t\t</p>\n\t\t\t) : (\n\t\t\t\t<p>Is {currentPlayer} player turn!</p>\n\t\t\t)}\n\t\t\t<Grid grid={grid} setGrid={setGrid} onDrop={handleDrop} />\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React, { useState } from 'react';\n\nconst BlogPage = ({ children, title }) => {\n\tconst [isShown, setIsShown] = useState(true);\n\treturn (\n\t\t<section className=\"section\" style={{ paddingBottom: 0 }}>\n\t\t\t<div className=\"content\">\n\t\t\t\t<h2>\n\t\t\t\t\t{title + ' '}\n\t\t\t\t\t{isShown ? (\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\tclassName=\"has-text-danger is-size-5\"\n\t\t\t\t\t\t\thref=\"#!\"\n\t\t\t\t\t\t\tonClick={() => setIsShown(!isShown)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span className=\"icon is-small\">\n\t\t\t\t\t\t\t\t<i className=\"fas fa-minus-circle\"></i>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<a\n\t\t\t\t\t\t\tclassName=\"has-text-success is-size-5\"\n\t\t\t\t\t\t\thref=\"#!\"\n\t\t\t\t\t\t\tonClick={() => setIsShown(!isShown)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<span className=\"icon is-small\">\n\t\t\t\t\t\t\t\t<i className=\"fas fa-plus-circle\"></i>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t)}\n\t\t\t\t</h2>\n\t\t\t\t{isShown && children}\n\t\t\t</div>\n\t\t</section>\n\t);\n};\n\nexport default BlogPage;\n","import React from 'react';\nimport Highlight from 'react-highlight';\nimport BlogPage from './BlogPage';\n\nconst GettingStarted = () => {\n\treturn (\n\t\t<BlogPage title=\"Gettin' started\">\n\t\t\t<div>\n\t\t\t\t<p>\n\t\t\t\t\tFirst of all we have to use Create React App to make the boiler\n\t\t\t\t\tplate of our app.\n\t\t\t\t</p>\n\t\t\t\t<pre>$ npx create-react-app connect-four</pre>\n\t\t\t\t<p>\n\t\t\t\t\tAnd since we already are in the terminal lets go inside of the\n\t\t\t\t\t\"connect-four\" directory and install Styled Component.\n\t\t\t\t</p>\n\t\t\t\t<pre>\n\t\t\t\t\t$ cd connect-four <br />$ npm i styled-components\n\t\t\t\t</pre>\n\t\t\t\t<p>\n\t\t\t\t\tFinally, lets clean up a little bit so we can start with our\n\t\t\t\t\tawesome game.\n\t\t\t\t</p>\n\t\t\t\t<pre>\n\t\t\t\t\t$ cd src <br />$ rm App.css App.test.js index.css logo.svg\n\t\t\t\t</pre>\n\t\t\t\t<p>Now change App.js to look like this:</p>\n\t\t\t\t<Highlight className=\"javascript\">\n\t\t\t\t\t{`import React from 'react';\n\nconst App = () => {\n  return (\n\t <div>Connect Four</div>\n  );\n}\n\nexport default App;`}\n\t\t\t\t</Highlight>\n\t\t\t\t<p>And index.js to look like this:</p>\n\t\t\t\t<Highlight className=\"javascript\">\n\t\t\t\t\t{`import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n`}\n\t\t\t\t</Highlight>\n\t\t\t</div>\n\t\t</BlogPage>\n\t);\n};\n\nexport default GettingStarted;\n","import React from 'react';\nimport Highlight from 'react-highlight';\nimport BlogPage from './BlogPage';\n\nconst DataStructure = () => {\n\treturn (\n\t\t<BlogPage title=\"Defining Data structure\">\n\t\t\t<p>\n\t\t\t\tThe grid where we're going to drop the disks can be represented with\n\t\t\t\tan array of arrays.\n\t\t\t</p>\n\t\t\t<Highlight className=\"javascript\">\n\t\t\t\tconst grid = [[],[],[],[],[],[],[]];\n\t\t\t</Highlight>\n\t\t\t<p>\n\t\t\t\tThe only difference with the usual way of representing it is that we\n\t\t\t\tare going to set the columns first and then the rows. So, to get row\n\t\t\t\t1 column 2 we say\n\t\t\t</p>\n\t\t\t<Highlight className=\"javascript\">grid[2][1];</Highlight>\n\t\t\t<p>\n\t\t\t\tThis is because we want to have de columns independent of each\n\t\t\t\tother. So, to drop the disks into de grid we can do:\n\t\t\t</p>\n\t\t\t<Highlight className=\"javascript\">grid[1].push('disk');</Highlight>\n\t\t\t<p>\n\t\t\t\tTalking about disks, we are going to represent them with the colour\n\t\t\t\tsetted in two constants.\n\t\t\t</p>\n\t\t\t<Highlight className=\"javascript\">\n\t\t\t\tconst RED = 'red';\n\t\t\t\t<br />\n\t\t\t\tconst BLUE = 'blue';\n\t\t\t</Highlight>\n\t\t\t<p>So, to drop a red disk into the grid we're going to do:</p>\n\t\t\t<Highlight className=\"javascript\">grid[1].push(RED);</Highlight>\n\t\t\t<p>\n\t\t\t\tAs we are going to use Hooks, we have to import the useState hook.\n\t\t\t\tApp.js should look like this:\n\t\t\t</p>\n\t\t\t<Highlight className=\"javascript\">{`import React, {useState} from 'react';\nconst RED = 'red';\nconst BLUE = 'blue';\nconst GRID = [[], [], [], [], [], [], []];\n\nconst App = () => {\n  const [grid, setGrid] = useState(GRID);\n  return <div>Connect Four</div>;\n};\n\nexport default App;`}</Highlight>\n\t\t</BlogPage>\n\t);\n};\n\nexport default DataStructure;\n","import React from 'react';\nimport Highlight from 'react-highlight';\nimport BlogPage from './BlogPage';\nimport Grid from '../components/Grid';\n\nconst SettingGrid = () => {\n\treturn (\n\t\t<BlogPage title=\"Settin' the Grid\">\n\t\t\t<p>\n\t\t\t\tFirst of all we're going to set some constants with the colors and\n\t\t\t\tsizes. This way if something changes in the future we only have to\n\t\t\t\tchange the values here.\n\t\t\t</p>\n\t\t\t<Highlight className=\"javascript\">{`const COLOR = {\n\tred: 'hsl(348, 100%, 61%)',\n\tblue: 'hsl(217, 71%, 53%)',\n};\nconst LIGHT = 'hsl(0, 0%, 96%)';\nconst DARK = 'hsl(0, 0%, 86%)';\nconst SIZE = 2;`}</Highlight>\n\t\t\t<p>\n\t\t\t\tThe next step is to set up the Grid. We're going to use flexbox to\n\t\t\t\tdisplay it. The left, right and margin attributs are set to display\n\t\t\t\tthe grid in the center of the page. The display one is to make the\n\t\t\t\tcolumns be displayed next to each other. And the rest are to display\n\t\t\t\tde border, except for the box-sizing one which is used because bulma\n\t\t\t\tmessed up with the padding.\n\t\t\t</p>\n\t\t\t<Highlight className=\"javascript\">{`const Container = styled.div\\`\n\tleft: 0;\n\tright: 0;\n\tmargin: auto;\n\tdisplay: flex;\n\twidth: fit-content;\n\tborder: 2px solid black;\n\tborder-radius: 5px;\n\toverflow: hidden;\n\tbox-sizing: unset;\n\\`;`}</Highlight>\n\t\t\t<p>\n\t\t\t\tNow we have to set up the columns. The display and flex-direction\n\t\t\t\tatributtes are nedded to make the columns be displayed as if the\n\t\t\t\tdisks where dropped from the top. The other atributtes make the\n\t\t\t\tcolumns look nice.\n\t\t\t</p>\n\t\t\t<Highlight className=\"javascript\">{`const Column = styled.div\\`\n\tdisplay: flex;\n\tflex-direction: column-reverse;\n\twidth: \\${SIZE}em;\n\theight: \\${SIZE * 7}em;\n\tpadding: 2px 6px 2px 2px\n\tbackground-color: \\${({ index }) => (index % 2 === 0 ? LIGHT : DARK)};\n\\`;`}</Highlight>\n\t\t\t<p>The disks:</p>\n\t\t\t<Highlight className=\"javascript\">{`const Disk = styled.div\\`\n\twidth: \\${SIZE}em;\n\theight: \\${SIZE}em;\n\tborder-radius: \\${SIZE}em;\n\tborder: 2px solid\n\t\t\\${({ color }) => (!color.includes('-win') ? COLOR[color] : 'black')};\n\tbackground-color: \\${({ color }) => COLOR[color.replace('-win', '')]};\n\tmargin-top: 1px;\n\\`;`}</Highlight>\n\t\t\t<p>And finally we put everything together:</p>\n\t\t\t<Highlight className=\"javascript\">{`const Grid = ({ grid, onDrop }) => (\n\t<Container>\n\t\t{grid.map((column, index) => (\n\t\t\t<Column key={index} index={index} onClick={() => onDrop(index)}>\n\t\t\t\t{column.map((color, index) => (\n\t\t\t\t\t<Disk key={index} color={color} />\n\t\t\t\t))}\n\t\t\t</Column>\n\t\t))}\n\t</Container>\n);`}</Highlight>\n\t\t\t<p>And if we call the grid with this:</p>\n\t\t\t<Highlight className=\"javascript\">{`<Grid\n\tgrid={[\n\t\t['blue', 'red'],\n\t\t['red-win', 'blue', 'red'],\n\t\t['red', 'red-win'],\n\t\t['red', 'blue', 'red-win'],\n\t\t['blue', 'red', 'blue', 'red-win'],\n\t\t['red', 'blue'],\n\t\t['red', 'blue'],\n\t]}\n/>`}</Highlight>\n\t\t\t<Grid\n\t\t\t\tgrid={[\n\t\t\t\t\t['blue', 'red'],\n\t\t\t\t\t['red-win', 'blue', 'red'],\n\t\t\t\t\t['red', 'red-win'],\n\t\t\t\t\t['red', 'blue', 'red-win'],\n\t\t\t\t\t['blue', 'red', 'blue', 'red-win'],\n\t\t\t\t\t['red', 'blue'],\n\t\t\t\t\t['red', 'blue'],\n\t\t\t\t]}\n\t\t\t/>\n\t\t</BlogPage>\n\t);\n};\n\nexport default SettingGrid;\n\n/*\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst COLOR = {\n\tred: 'hsl(348, 100%, 61%)',\n\tblue: 'hsl(217, 71%, 53%)',\n};\nconst LIGHT = 'hsl(0, 0%, 96%)';\nconst DARK = 'hsl(0, 0%, 86%)';\nconst SIZE = 2;\n\nconst Disk = styled.div`\n\twidth: ${SIZE}em;\n\theight: ${SIZE}em;\n\tborder-radius: ${SIZE}em;\n\tborder: 2px solid\n\t\t${({ color }) => (!color.includes('-win') ? COLOR[color] : 'black')};\n\tbackground-color: ${({ color }) => COLOR[color.replace('-win', '')]};\n\tmargin-top: 1px;\n`;\n\nconst Column = styled.div`\n\tdisplay: flex;\n\tflex-direction: column-reverse;\n\twidth: ${SIZE}em;\n\theight: ${SIZE * 7}em;\n\tpadding: 2px 6px 2px 2px\n\tbackground-color: ${({ index }) => (index % 2 === 0 ? LIGHT : DARK)};\n`;\n\nconst Container = styled.div`\n\tleft: 0;\n\tright: 0;\n\tmargin: auto;\n\tdisplay: flex;\n\twidth: fit-content;\n\tborder: 2px solid black;\n\tborder-radius: 5px;\n\toverflow: hidden;\n\tbox-sizing: unset;\n`;\n\nconst Grid = ({ grid, onDrop }) => (\n\t<Container>\n\t\t{grid.map((column, index) => (\n\t\t\t<Column key={index} index={index} onClick={() => onDrop(index)}>\n\t\t\t\t{column.map((color, index) => (\n\t\t\t\t\t<Disk key={index} color={color} />\n\t\t\t\t))}\n\t\t\t</Column>\n\t\t))}\n\t</Container>\n);\n\nexport default Grid;\n\n * */\n","import React from 'react';\nimport Highlight from 'react-highlight';\nimport BlogPage from './BlogPage';\nimport Grid from '../components/Grid';\n\nconst WinningIsWinning = () => {\n\treturn (\n\t\t<BlogPage title=\"Winning's winning\">\n\t\t\t<p>\n\t\t\t\tNow we're going to define the winning logic, in which we're going to\n\t\t\t\tuse recursion. So, let's take care of the vertical situation first,\n\t\t\t\tjust to warm up.\n\t\t\t</p>\n\t\t\t<Highlight className=\"javascript\">{`const checkVertical = (currentPlayer, column, disksAmount) => {\n\tdisksAmount = disksAmount || 1;\n\tconst index = column.length - disksAmount;\n\tif (!column[index] || column[index] !== currentPlayer) {\n\t\treturn false;\n\t}\n\tif (\n\t\tdisksAmount === 4 ||\n\t\tcheckVertical(currentPlayer, column, disksAmount + 1)\n\t) {\n\t\tcolumn[index] = currentPlayer + '-win';\n\t\treturn true;\n\t}\n};`}</Highlight>\n\t\t\t<Grid grid={[[], [], [], ['red', 'red', 'red', 'red'], [], [], []]} />\n\t\t\t<p>\n\t\t\t\tAs always, we have to define the base case for the recursion. In our\n\t\t\t\tcase, the base case is when the disk doesn't belong to the current\n\t\t\t\tplayer or the position is outside of the grid.\n\t\t\t</p>\n\t\t\t<Highlight className=\"javascript\">{`if (!column[index] || column[index] !== currentPlayer) {\n\treturn false;\n}`}</Highlight>\n\t\t</BlogPage>\n\t);\n};\n\nexport default WinningIsWinning;\n\n/*\nconst checkVertical = (currentPlayer, column, disksAmount) => {\n\tdisksAmount = disksAmount || 1;\n\tconst index = column.length - disksAmount;\n\tif (!column[index] || column[index] !== currentPlayer) {\n\t\treturn false;\n\t}\n\tif (\n\t\tdisksAmount === 4 ||\n\t\tcheckVertical(currentPlayer, column, disksAmount + 1)\n\t) {\n\t\tcolumn[index] = currentPlayer + '-win';\n\t\treturn true;\n\t}\n};\n\nconst checkFromLeftWithSlope = (\n\tcurrentPlayer,\n\tgrid,\n\t{ column, row },\n\tslope,\n\tdisksAmount\n) => {\n\tif (!grid[column] || grid[column][row] !== currentPlayer) {\n\t\treturn false;\n\t}\n\tdisksAmount = disksAmount || 0;\n\tconst nextPosition = { column: column + 1, row: row + slope };\n\tif (\n\t\tcheckFromLeftWithSlope(\n\t\t\tcurrentPlayer,\n\t\t\tgrid,\n\t\t\tnextPosition,\n\t\t\tslope,\n\t\t\tdisksAmount + 1\n\t\t) ||\n\t\tdisksAmount >= 3\n\t) {\n\t\tgrid[column][row] = currentPlayer + '-win';\n\t\treturn true;\n\t}\n};\n\nconst getLeftPositionWithSlope = (\n\tcurrentPlayer,\n\tgrid,\n\t{ column, row },\n\tslope\n) => {\n\tif (!grid[column] || grid[column][row] !== currentPlayer) {\n\t\treturn false;\n\t}\n\tconst nextPosition = { column: column - 1, row: row - slope };\n\tconst leftResult = getLeftPositionWithSlope(\n\t\tcurrentPlayer,\n\t\tgrid,\n\t\tnextPosition,\n\t\tslope\n\t);\n\tif (leftResult === false) {\n\t\treturn { column, row };\n\t}\n\treturn leftResult;\n};\n\nconst checkFromLeftUp = (currentPlayer, grid, column) => {\n\tconst SLOPE = -1;\n\tconst currentPosition = { column, row: grid[column].length - 1 };\n\tconst leftUpPosition = getLeftPositionWithSlope(\n\t\tcurrentPlayer,\n\t\tgrid,\n\t\tcurrentPosition,\n\t\tSLOPE\n\t);\n\treturn checkFromLeftWithSlope(currentPlayer, grid, leftUpPosition, SLOPE);\n};\n\nconst checkFromLeftDown = (currentPlayer, grid, column) => {\n\tconst SLOPE = 1;\n\tconst currentPosition = { column, row: grid[column].length - 1 };\n\tconst leftUpPosition = getLeftPositionWithSlope(\n\t\tcurrentPlayer,\n\t\tgrid,\n\t\tcurrentPosition,\n\t\tSLOPE\n\t);\n\treturn checkFromLeftWithSlope(currentPlayer, grid, leftUpPosition, SLOPE);\n};\nconst checkFromLeft = (currentPlayer, grid, column) => {\n\tconst SLOPE = 0;\n\tconst currentPosition = { column, row: grid[column].length - 1 };\n\tconst leftUpPosition = getLeftPositionWithSlope(\n\t\tcurrentPlayer,\n\t\tgrid,\n\t\tcurrentPosition,\n\t\tSLOPE\n\t);\n\treturn checkFromLeftWithSlope(currentPlayer, grid, leftUpPosition, SLOPE);\n};\n\nconst checkWin = (currentPlayer, grid, columnIndex) => {\n\treturn (\n\t\tcheckFromLeftUp(currentPlayer, grid, columnIndex) ||\n\t\tcheckFromLeftDown(currentPlayer, grid, columnIndex) ||\n\t\tcheckFromLeft(currentPlayer, grid, columnIndex) ||\n\t\tcheckVertical(currentPlayer, grid[columnIndex])\n\t);\n};\n\nexport default checkWin;\n\n*/\n","import React, { useState } from 'react';\n\nconst UnderConstruction = ({ children, title }) => {\n\tconst [isActive, setIsActive] = useState(true);\n\treturn (\n\t\t<div className={'modal ' + (isActive && 'is-active')}>\n\t\t\t<div\n\t\t\t\tclassName=\"modal-background\"\n\t\t\t\tonClick={() => setIsActive(!isActive)}\n\t\t\t></div>\n\t\t\t<div className=\"modal-content\">\n\t\t\t\t<article className=\"message is-warning\">\n\t\t\t\t\t<div className=\"message-header\">\n\t\t\t\t\t\t<p>Under Construction</p>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName=\"delete\"\n\t\t\t\t\t\t\taria-label=\"delete\"\n\t\t\t\t\t\t\tonClick={() => setIsActive(!isActive)}\n\t\t\t\t\t\t></button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"message-body is-size-5\">\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tHi! Just wanted you to know that this page isn't finished yet.\n\t\t\t\t\t\t\tFeel free to take a look around but remember to come back\n\t\t\t\t\t\t\tin the future to see the final version{' '}\n\t\t\t\t\t\t\t<span className=\"icon\">\n\t\t\t\t\t\t\t\t<i className=\"far fa-smile\"></i>\n\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<p>Have an awesome day!</p>\n\t\t\t\t\t</div>\n\t\t\t\t</article>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default UnderConstruction;\n","import React, { Fragment } from 'react';\nimport ConnectFour from './components/ConnectFour';\nimport 'highlight.js/styles/lightfair.css';\nimport GettingStarted from './blog/GettingStarted';\nimport DataStructure from './blog/DataStructure';\nimport SettingGrid from './blog/SettingGrid';\nimport WinningIsWinning from './blog/WinningIsWinning';\nimport UnderConstruction from './blog/UnderConstruction';\n\nconst App = () => {\n\treturn (\n\t\t<Fragment>\n\t\t\t<div className=\"container\">\n\t\t\t\t<div className=\"hero\">\n\t\t\t\t\t<div className=\"hero-body\">\n\t\t\t\t\t\t<h1 className=\"title is-1\">Connect Four</h1>\n\t\t\t\t\t\t<h2 className=\"subtitle is-4\">\n\t\t\t\t\t\t\t<div className=\"level\">\n\t\t\t\t\t\t\t\t<div className=\"level-left\">Made with React.</div>\n\t\t\t\t\t\t\t\t<div className=\"level-right\">\n\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\tstyle={{ color: 'inherit' }}\n\t\t\t\t\t\t\t\t\t\thref=\"https://elpopisencio.github.io\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<span className=\"icon is-large\">\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-home\"></i>\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\t\t\tstyle={{ color: 'inherit' }}\n\t\t\t\t\t\t\t\t\t\thref=\"https://github.com/elpopisencio/pagination\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<span className=\"icon is-large\">\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"fab fa-github\"></i>\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</h2>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<ConnectFour />\n\t\t\t\t<section className=\"section\">\n\t\t\t\t\t<div className=\"content is-medium\">\n\t\t\t\t\t\t<h2>Description</h2>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tIn this project we'll make a Connect Four game with React\n\t\t\t\t\t\t\tand Styled Components.\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</section>\n\t\t\t\t<GettingStarted />\n\t\t\t\t<DataStructure />\n\t\t\t\t<SettingGrid />\n\t\t\t\t<WinningIsWinning />\n\t\t\t</div>\n\t\t\t<UnderConstruction />\n\t\t</Fragment>\n\t);\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}